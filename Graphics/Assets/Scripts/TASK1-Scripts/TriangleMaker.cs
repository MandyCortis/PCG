using System.Collections.Generic;
using UnityEngine;

[RequireComponent(typeof(MeshFilter))]
[RequireComponent(typeof(MeshRenderer))]

public class TriangleMaker : MonoBehaviour
{

    [SerializeField]
    private Vector3 size = Vector3.one; //same as: new Vector3(1, 1, 1) -> scale object is 1, starting size

    private List<Material> materialList;


    void Update()
    {
        GenerateTriangle();
    }


    public void GenerateTriangle()
    {
        //1. Initialise mesh filter
        MeshFilter meshFilter = this.GetComponent<MeshFilter>();

        //2. Initialise mesh builder
        MeshGenerator meshGen = new MeshGenerator(1);

        //3. Build our triangle
        Vector3 p0 = new Vector3(size.x, size.y, -size.z); //-size.z = in front of us
        Vector3 p1 = new Vector3(-size.x, size.y, -size.z); //top right
        Vector3 p2 = new Vector3(-size.x, size.y, size.z);

        meshGen.BuildTriangle(p0, p1, p2, 0);

        //4. Mesh filter's mesh to the one generated by the mesh builder
        meshFilter.mesh = meshGen.CreateMesh();

        //5. Initialise mesh renderer and assign material list to the mesh renderer's materials list
        MeshRenderer meshRenderer = this.GetComponent<MeshRenderer>();
        AddMaterials();
        meshRenderer.materials = materialList.ToArray();
    }


    private void AddMaterials()
    {
        Material greenMat = new Material(Shader.Find("Specular"));
        greenMat.color = Color.green;

        materialList = new List<Material>();
        materialList.Add(greenMat);
    }
}
